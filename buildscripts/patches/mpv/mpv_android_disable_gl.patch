diff --git a/meson.build b/meson.build
index acaa39f..9186915 100644
--- a/meson.build
+++ b/meson.build
@@ -459,7 +459,7 @@ if features['android']
     sources += files('audio/out/ao_audiotrack.c',
                      'misc/jni.c',
                      'osdep/android/strnlen.c',
-                     'video/out/android_common.c',
+                     # 'video/out/android_common.c',
                      'video/out/vo_mediacodec_embed.c')
 endif
 
diff --git a/video/out/android_common.c b/video/out/android_common.c
deleted file mode 100644
index e32f9c1..0000000
--- a/video/out/android_common.c
+++ /dev/null
@@ -1,98 +0,0 @@
-/*
- * This file is part of mpv.
- *
- * mpv is free software; you can redistribute it and/or
- * modify it under the terms of the GNU Lesser General Public
- * License as published by the Free Software Foundation; either
- * version 2.1 of the License, or (at your option) any later version.
- *
- * mpv is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU Lesser General Public License for more details.
- *
- * You should have received a copy of the GNU Lesser General Public
- * License along with mpv.  If not, see <http://www.gnu.org/licenses/>.
- */
-
-#include <libavcodec/jni.h>
-#include <android/native_window_jni.h>
-
-#include "android_common.h"
-#include "common/msg.h"
-#include "misc/jni.h"
-#include "options/m_config.h"
-#include "vo.h"
-
-struct vo_android_state {
-    struct mp_log *log;
-    ANativeWindow *native_window;
-};
-
-int vo_android_init(struct vo *vo)
-{
-    vo->android = talloc_zero(vo, struct vo_android_state);
-    struct vo_android_state *ctx = vo->android;
-
-    *ctx = (struct vo_android_state){
-        .log = mp_log_new(ctx, vo->log, "android"),
-    };
-
-    JNIEnv *env = MP_JNI_GET_ENV(ctx);
-    if (!env) {
-        MP_FATAL(ctx, "Could not attach java VM.\n");
-        goto fail;
-    }
-
-    jobject surface = (jobject)(intptr_t)vo->opts->WinID;
-    ctx->native_window = ANativeWindow_fromSurface(env, surface);
-    if (!ctx->native_window) {
-        MP_FATAL(ctx, "Failed to create ANativeWindow\n");
-        goto fail;
-    }
-
-    return 1;
-fail:
-    talloc_free(ctx);
-    vo->android = NULL;
-    return 0;
-}
-
-void vo_android_uninit(struct vo *vo)
-{
-    struct vo_android_state *ctx = vo->android;
-    if (!ctx)
-        return;
-
-    if (ctx->native_window)
-        ANativeWindow_release(ctx->native_window);
-
-    talloc_free(ctx);
-    vo->android = NULL;
-}
-
-ANativeWindow *vo_android_native_window(struct vo *vo)
-{
-    struct vo_android_state *ctx = vo->android;
-    return ctx->native_window;
-}
-
-bool vo_android_surface_size(struct vo *vo, int *out_w, int *out_h)
-{
-    struct vo_android_state *ctx = vo->android;
-
-    int w = vo->opts->android_surface_size.w,
-        h = vo->opts->android_surface_size.h;
-    if (!w)
-        w = ANativeWindow_getWidth(ctx->native_window);
-    if (!h)
-        h = ANativeWindow_getHeight(ctx->native_window);
-
-    if (w <= 0 || h <= 0) {
-        MP_ERR(ctx, "Failed to get height and width.\n");
-        return false;
-    }
-    *out_w = w;
-    *out_h = h;
-    return true;
-}
diff --git a/video/out/android_common.h b/video/out/android_common.h
index 44f5aef..cc58e4a 100644
--- a/video/out/android_common.h
+++ b/video/out/android_common.h
@@ -17,13 +17,11 @@
 
 #pragma once
 
-#include <android/native_window_jni.h>
-
 #include "common/common.h"
 
 struct vo;
 
-int vo_android_init(struct vo *vo);
-void vo_android_uninit(struct vo *vo);
-ANativeWindow *vo_android_native_window(struct vo *vo);
-bool vo_android_surface_size(struct vo *vo, int *w, int *h);
+int vo_android_init(struct vo *vo) { return 0; }
+void vo_android_uninit(struct vo *vo) {}
+ANativeWindow *vo_android_native_window(struct vo *vo) { return NULL; }
+bool vo_android_surface_size(struct vo *vo, int *w, int *h) {}
diff --git a/video/out/opengl/ra_gl.h b/video/out/opengl/ra_gl.h
index 9844977..d3a7328 100644
--- a/video/out/opengl/ra_gl.h
+++ b/video/out/opengl/ra_gl.h
@@ -3,15 +3,14 @@
 #include "common.h"
 #include "utils.h"
 
-struct ra *ra_create_gl(GL *gl, struct mp_log *log);
+struct ra *ra_create_gl(GL *gl, struct mp_log *log) { return NULL; }
 struct ra_tex *ra_create_wrapped_tex(struct ra *ra,
                                      const struct ra_tex_params *params,
-                                     GLuint gl_texture);
-struct ra_tex *ra_create_wrapped_fb(struct ra *ra, GLuint gl_fbo, int w, int h);
-GL *ra_gl_get(struct ra *ra);
-void ra_gl_set_debug(struct ra *ra, bool enable);
+                                     GLuint gl_texture) { return NULL; }
+struct ra_tex *ra_create_wrapped_fb(struct ra *ra, GLuint gl_fbo, int w, int h) { return NULL; }
+GL *ra_gl_get(struct ra *ra) { return NULL; }
+void ra_gl_set_debug(struct ra *ra, bool enable) {}
 void ra_gl_get_format(const struct ra_format *fmt, GLint *out_internal_format,
-                      GLenum *out_format, GLenum *out_type);
-void ra_gl_get_raw_tex(struct ra *ra, struct ra_tex *tex,
-                       GLuint *out_texture, GLenum *out_target);
-bool ra_is_gl(struct ra *ra);
+                      GLenum *out_format, GLenum *out_type) {}
+void ra_gl_get_raw_tex(struct ra *ra, struct ra_tex *tex GLuint *out_texture, GLenum *out_target) {}
+bool ra_is_gl(struct ra *ra) { return false; }
diff --git a/wscript_build.py b/wscript_build.py
index 16c8cf0..4c2f1dd 100644
--- a/wscript_build.py
+++ b/wscript_build.py
@@ -436,7 +436,7 @@ def build(ctx):
         ( "video/img_format.c" ),
         ( "video/mp_image.c" ),
         ( "video/mp_image_pool.c" ),
-        ( "video/out/android_common.c",          "android" ),
+        # ( "video/out/android_common.c",          "android" ),
         ( "video/out/aspect.c" ),
         ( "video/out/bitmap_packer.c" ),
         ( "video/out/cocoa/events_view.m",       "cocoa" ),
